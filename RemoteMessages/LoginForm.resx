<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABEREQ8aGhoiYKCgqmDg4OpgYGBpoKCgqaCgoKmgoKCp4KCgqeCgoKngoKCp4KC
        gqeCgoKngoKCp4KCgqeCgoKngoKCp4KCgqeCgoKngoKCpoKCgqaCgoKmgoKCqIODg6ptbW2UWVlZTAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZmZmX4ODg+KYmJj/lpaW/5eXl/+Xl5f/mJiY/5iYmP+YmJj/mJiY/5iY
        mP+YmJj/mJiY/5iYmP+YmJj/mJiY/5iYmP+YmJj/mJiY/5iYmP+YmJj/mJiY/5iYmP+Xl5f/lpaW/5eX
        l/+JiYnxdHR0dwAAAAAAAAAAAAAAAGBgYHOurq7/qqqq/66urv+1tbX/tra2/7e3t/+3t7f/t7e3/7e3
        t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7a2
        tv+1tbX/sLCw/6ioqP+mpqb/f39/lAAAAAAyMjIroaGh/62trf+8vLz/x8fH/8fHx//Hx8f/x8fH/8fH
        x//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fHx//Hx8f/x8fH/8fH
        x//Hx8f/x8fH/8fHx//Hx8f/wMDA/6ysrP+lpaX/U1NTTISEhJy6urr/vLy8/8vLy//Kysr/ysrK/8nJ
        yf/Jycn/ycnJ/8nJyf/Jycn/ycnJ/8nJyf/Jycn/ycnJ/8nJyf/Jycn/ycnJ/8nJyf/Jycn/ycnJ/8nJ
        yf/Jycn/ycnJ/8nJyf/Jycn/ysrK/8vLy//MzMz/wMDA/7i4uP+Pj4/Ep6enzL29vf/Ly8v/z8/P/83N
        zf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83N
        zf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/83Nzf/Nzc3/zc3N/87Ozv/MzMz/vLy8/6ysrOiurq7RzMzM/9DQ
        0P/S0tL/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR
        0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0dHR/9HR0f/R0dH/0tLS/9LS0v/Hx8f/t7e357W1
        tc3T09P/1NTU/9bW1v/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV1f/V1dX/1dXV/9XV
        1f/V1dX/1NTU/9TU1P/U1NT/1NTU/9TU1P/U1NT/1NTU/9TU1P/U1NT/1dXV/9XV1f/W1tb/1dXV/8zM
        zP+9vb3luLi4ztfX1//Y2Nj/2tra/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dj/2NjY/9nZ2f/Z2dn/2dnZ/9nZ
        2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/9nZ2f/Z2dn/2dnZ/9ra
        2v/a2tr/0NDQ/8DAwOa8vLzO29vb/9zc3P/e3t7/yLq0/6iCbv+baUn/mWZG/6h/af/Nvrj/4OHi/9vb
        2//b2tr/29vb/9zc3P/c3Nz/3t7e/9/f3//g4OD/4ODg/+Dg4P/g4OD/4ODg/+Dg4P/g4OD/39/f/97e
        3v/d3d3/3d3d/97e3v/U1NT/xMTE5r+/v8/f39//3Nvb/5lrUv+PSxn/iUEM/4dADf+IQhD/iUQQ/4pH
        Fv+dakv/0cnE/9vc2//b29v/3Nzc/97e3v/g4OD/4+Pj/+bm5f/n5+f/5+fn/+fn5//n5+f/5+fn/+bm
        5v/l5ub/4+Pj/+Li4v/h4eH/4ODg/9jY2P/IyMjmwsLCz97d3f+SYkT/mU0P/5RSGv+NSxn/jkwZ/45M
        Gf+PTBn/j0wY/49NFv+MRRP/0s/M/9zc3f/c3Nz/3t7e/+Dg4P/i4uL/5ubl/+fn5//o6Oj/6Ojo/+jo
        6P/p6Oj/6Ojo/+jn5//m5uX/5eXl/+Xl5f/k5OT/29vb/8vLy+bFxcXPlHdk/6NRCf+YThD/lkwO/6lg
        IP+VUxz/k1Ic/5RTHP+UUxz/lFQd/5NNEf+ickv/4ODg/+Dh4f/SycX/29bS/+Li4v/k5OT/5eXl/+fn
        5//n5+f/5+fn/+fn5//m5ub/5ubm/+fn5//n5+j/6enp/+np6f/f39//zs7O57KvrtiXVBb/n1UN/4lv
        XP9vXVL/bjkL/6pkIP+cWyD/m1sg/5tbIP+bWx//nFwg/5taHP+wgFn/to9w/5lYHv/Co4b/5ufn/+bm
        5v/l5eX/5OTk/+Tk5f/k5OT/5OTk/+Tk5P/l5eX/6Ojo/+rq6v/r6+v/7Ozs/+Li4v/Q0NDnno+B6qhY
        B/+pmo3/4uLi/+Hg4P+HhIf/hU4b/7VwKP+iYiP/o2Mj/6NjI/+jYyP/o2Ii/6JhHv+lZSH/pGMf/6Nj
        Iv+0h2D/5OLg/+Xl5v/k5OT/5OPj/+Tk5P/Vzcb/29PL/+Xl5v/p6ur/6Ofm/+DY0v/u7u7/5OTk/9PT
        0+d/XTn5uXYx/+jo6P/k5OT/5eXl/+Xl5f+EYkD/tmwb/6trKP+qayf/qmsn/6prJ/+qayf/qmso/6pr
        J/+qayj/qWom/6lmG/+2gkv/y7Sb/7mRZv/NtZr/uI9l/6ZkH/+paCP/ya6Q/9jJuf+seUf/qmYc/7mK
        Wf/i4N//1NTU52lEGvvCgjr/7/L1/+no6P/o6Oj/5+fo/51nKP+4ciP/snMs/7JzK/+ycyv/snMr/7Fz
        K/+xciv/tXUs/7Z1LP+2di3/tnYu/7VyJ/+0byH/tnEj/7RyKf+2dCn/s3Ip/7BvJv+vbCL/sXIr/7Vz
        J/+xcyr/rmcW/7qMWv/U1NTnhnpr77VuFv/MpXj/7/T2/+Xk4f+3kGT/unMd/7p9Mv+4ei7/uHsv/7h7
        L/+4ey//tXgu/8KBMP/TjDX/0Is1/9GLNv/RizX/0Yw2/9GMNv/Qizb/xoAr/8uFMP/Pizb/1I42/9WO
        Nv/QiTL/zIgx/82IM//Pizb/0IIh/7+UYviQj47gnGQa/92PKv+7gjv/vYAx/8R9I//ChTb/voEy/7+C
        Mv+/gjL/v4Iy/7yAMv/VkTf/snYp/3hqV/92aln/dWhV/3RmU/90ZlP/dWdV/3RmU/94YED/g2E0/4Vh
        M/+FWyb/il8n/4tdIf+NXSD/kWAh/55rKv+nciv/pI1w9MvLy9FWQib/2JMy/9eTNf/AgSz/xIk3/8SI
        Nf/FiDX/xYg1/8SHNP/AhTT/2JU4/9uYO//Nxr7/5ubm/+fn5//o6On/6+vs/+3t7v/t7u7/7u/w/+7v
        8P/p6er/6enq/9LT1f/Oz9D/y8zO/8zNzv/AwL//rquo/7e1s//T09PnzczM0MzO0P9OLAD/5Z42/+ek
        Qv/OkTn/yY43/8iNN//Jjjj/0ZQ7/+aiPf/GhSj/r6CM/+Pj4//j4+P/4+Pj/+Pj4//m5ub/6urq/+vr
        6//r6+v/6+vr/+zs6//r6+v/6+vr/+zs7P/s7Oz/7Ozs/+3t7f/s7Oz/4+Pj/9LS0ufJycnQ5+fn/7q6
        uv9eSzH/sXsq/9qXNv/inz3/4qE//96ZNv/UkzX/q347/62jmP/j4+P/4+Pj/+Pj4//k5OT/5eXl/+fn
        5//q6ur/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//r6+v/6+vr/+vr6//h4eH/0NDQ58bG
        xs/n5+f/5+fn/+Dg4f+Nion/empT/3xaLf+FYS7/iG1G/5iMff/S0M//4+Pj/+Xl5f/l5eX/5eXl/+bm
        5v/n5+f/6Ojo/+np6f/p6en/6enp/+np6f/p6en/6enp/+np6f/p6en/6enp/+np6f/q6ur/6urq/+Dg
        4P/Pz8/nxcXFz+Xl5f/m5ub/6Ojo/+fn5//m5ub/5ubm/+bl5v/l5eX/5eXl/+bm5v/m5ub/5ubm/+bm
        5v/m5ub/5+fn/+fn5//o6Oj/6Ojo/+fn5//n5+f/5+fn/+fn5//n5+f/5+fn/+fn5//n5+f/5+fn/+jo
        6P/o6Oj/3t7e/83NzefDw8PP4+Pj/+Xl5f/n5+f/5eXl/+bm5v/m5ub/5ubm/+bm5v/m5ub/5ubm/+bm
        5v/m5ub/5ubm/+bm5v/m5ub/5ubm/+bm5v/m5ub/5ubm/+bm5v/m5ub/5ubm/+bm5v/m5ub/5eXl/+Xl
        5f/l5eX/5+fn/+Xl5f/c3Nz/zMzM5sPDw9Hj4+P/4uLi/+Tk5P/k5OT/5OTk/+Tk5P/j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj
        4//k5OT/5OTk/+Tk5P/k5OT/5OTk/9vb2//MzMzozMzM1OHh4f/h4eH/5OTk/+Tk5P/k5OT/5OTk/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Tk5P/k5OT/5OTk/+Tk5P/j4+P/3Nzc/9TU1O3U1NS96+vr/+Hh4f/j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Hh4f/p6en/2tra3rq6ul/z8/P/4ODg/+Tk
        5P/j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj
        4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//j4+P/4+Pj/+Pj4//k5OT/39/f//b29v/FxcWKAAAAANzc
        3Mrz8/P/5OTk/+bm5v/l5eX/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk
        5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/k5OT/5OTk/+Tk5P/l5eX/5ubm/+Tk5P/t7e3/5ubm6qKi
        ogwAAAAAvLy8Eu7u7sHs7Oz/7Ozs/+vr6//t7e3/7Ozs/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t
        7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+3t7f/t7e3/7e3t/+vr6//s7Oz/6+vr//Dw
        8NbT09MnAAAAAAAAAAAAAAAAAAAAANvb22Hn5+ex6urq1urq6tfq6urV6+vr1evr69Xr6+vV6+vr1evr
        69Xr6+vV6+vr1evr69Xr6+vV6+vr1evr69Xr6+vV6+vr1evr69Xr6+vV6+vr1evr69Xq6urW6urq2OXl
        5bvg4OB24uLiBQAAAAAAAAAA4AAAB8AAAAOAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACAAAAAgAAAAeAAAAM=
</value>
  </data>
</root>